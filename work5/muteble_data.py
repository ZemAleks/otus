from copy import copy, deepcopy

a = 1
b = a
a += 1
print(a, b)

"""
- Функция append() - позволяет добавлять в список один новый элемент — например, число, строку или другой список. 
- Функция extend() - работает как append(), но в качестве параметра принимает итерируемый объект: список, кортеж или строку.
"""

list1 = [1, 2, 3, 4]
list2 = list1
list2.append(5)
print(list1)
print(list2)

""" 
- Функция copy() — копирует область память в новую ячейку памяти, создавая новую ссылку на эту ячейку, тем самым
- разделяя две области памяти, делая две переменные независимыми, которые используется объектами для создания их копий. 
- Функция copy() импортируется в файл модуля командой - from copy import copy, deepcopy.
"""

list3 = [1, 2, 3, 4]
list4 = copy(list3)
list4.append(5)
print(list3)
print(list4)

"""
- Функция deepcopy() - глубокая копия, которая создает новый составной объект, 
- а затем рекурсивно вставляет в него копии объектов, найденных в оригинале.
- Функция deepcopy(x) - возвращает полную копию x, более тяжеловесная функция, которая проверяет и копирует все значения 
- внутри функции, поэтому она использует больше ресурсов и в теории медленнее выполняет вычисления.
- В тестировании целесообразнее использовать функцию copy, а если есть вложенные элементы, то используют deepcopy.
"""

my_dict = {'a': 1, 'b': {'c': 2}, 'd': {'e': 5}}
# Меняем значение другого вложенного словаря.
my_dict2 = copy(my_dict)  # copy - поверхностное копирование, эта функция не умеет копировать вложенные конструкции.
my_dict3 = deepcopy(my_dict)  # deepcopy - глубокое копирование, эта функция существует для копирования вложенных конструкций.
my_dict2['b']['c'] = 3
my_dict3['d']['e'] = 4
print("Вывод словарей:", my_dict)
print("Функция copy:", my_dict2)
print("Функция deepcopy:", my_dict3)
