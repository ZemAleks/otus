from abc import ABC, abstractmethod


class Figure(ABC):
    """
    - Абстрактный класс геометрической фигуры - Figure.
    - abc.ABC – базовый класс для создания абстрактных классов.
    - abc.abstractmethod – декоратор, который указывает, что метод является абстрактным.
    - Класс геометрической фигуры Figure(ABC) является родительским Абстрактным классом, который наследует другие классы потомков:
    - Rectangle(Figure), Triangle(Figure) и Circle(Figure).
    - Класс прямоугольника Rectangle(Figure) является Родительским классом для фигуры квадрата класса потомка Square(Rectangle).
    - При инициализации методом def __init__(self) вызывается конструктор его родительского класса super().__init__(),
    - который используется классом потомком для обращения к его родительскому классу.
    - super – это ключевое слово, которое используется для обращения к родительскому классу, для вызова кооперативного метода суперкласса.
    - При инициализации класс потомок берет от родительского класса методы расчета:
    - площади (get_area), периметра (et_perimeter) и принимает другую фигуры для расчета суммы площадей (add_area).
    """

    def __init__(self):  # инициализация экземпляра класса используется метод __init__
        pass

    @abstractmethod
    def get_area(self):
        pass

    @abstractmethod
    def get_perimeter(self):
        return

    # Каждая фигура должна реализовать метод add_area(figure),
    # который должен принимать другую геометрическую фигуру и возвращать сумму площадей этих фигур.
    # Функция isinstance() вернет True, если проверяемый объект является экземпляром указанного класса (классов).
    # Функция, проверяет объект, который передается первым аргументом, на принадлежность к классу другого объекта.
    # Если объект не является экземпляром данного типа, то функция всегда возвращает False.

    def add_area(self, other_figure):
        if not isinstance(other_figure, Figure):
            raise ValueError("Can't add area - Не могу добавить площадь фигуры")
        return self.get_area() + other_figure.get_area()
